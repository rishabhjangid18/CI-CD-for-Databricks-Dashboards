name: Databricks AI/BI Dashboard CI/CD

on:
  push:
    branches:
      - dev
      - uat
      - main
    paths:
      - '*.lvdash.json'
      - '.github/workflows/databricks-dashboard-cicd.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - dev
          - uat
          - prod

env:
  PYTHON_VERSION: '3.9'

jobs:
  validate:
    name: Validate Dashboard Files
    runs-on: ubuntu-latest
    outputs:
      validate-status: success
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install databricks-sdk pyyaml jsonschema

      - name: Validate dashboard JSON files
        run: python scripts/validate_dashboards.py

      - name: Validate SQL queries
        run: python scripts/validate_queries.py

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/dev' || github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'all'
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Databricks SDK
        run: pip install databricks-sdk

      - name: Deploy dashboards to Dev
        run: python scripts/deploy_dashboards.py --environment dev
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_SP_TOKEN }}

      - name: Run dashboard tests
        run: python scripts/test_dashboards.py --environment dev
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_SP_TOKEN }}

  deploy-uat:
    name: Deploy to UAT
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: github.ref == 'refs/heads/uat' || github.event.inputs.environment == 'uat' || github.event.inputs.environment == 'all'
    environment: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Databricks SDK
        run: pip install databricks-sdk

      - name: Deploy dashboards to UAT
        run: python scripts/deploy_dashboards.py --environment uat
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_UAT_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_UAT_SP_TOKEN }}

      - name: Run UAT tests
        run: python scripts/test_dashboards.py --environment uat
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_UAT_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_UAT_SP_TOKEN }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-uat
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'prod' || github.event.inputs.environment == 'all'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Databricks SDK
        run: pip install databricks-sdk

      - name: Backup existing dashboards
        run: python scripts/backup_dashboards.py --environment prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_SP_TOKEN }}

      - name: Deploy dashboards to Production
        run: python scripts/deploy_dashboards.py --environment prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_SP_TOKEN }}

      - name: Run production smoke tests
        run: python scripts/test_dashboards.py --environment prod --smoke-only
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_SP_TOKEN }}

      - name: Notify deployment success
        if: success()
        run: echo "Production deployment completed successfully"

      - name: Rollback on failure
        if: failure()
        run: python scripts/rollback_dashboards.py --environment prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_SP_TOKEN }}
